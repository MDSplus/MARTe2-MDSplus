#!/bin/sh
#
#  nirlp
#  NI-RLP startup script for Linux
#
#  (c) Copyright 2006,
#  National Instruments Corporation.
#  All Rights reserved.
#
#
#  following is the init header information for RH Linux variants, used by
#  /sbin/chkconfig
# chkconfig:         2345 60 60
# description:       National Instruments register level programming driver.
#
#  following is the init header information for SuSE Linux, used by /sbin/insserv
### BEGIN INIT INFO
# Provides:          nirlp
# Required-Start:    $syslog $remote_fs
# X-UnitedLinux-Should-Start: $time
# Required-Stop:     $syslog $remote_fs
# X-UnitedLinux-Should-Stop: $time
# Default-Start:     2 3 5
# Default-Stop:      0 1 6
# Short-Description: NI RLP Driver
# Description:       National Instruments register level programming driver.
### END INIT INFO
#
#-----------------------------------------------------------------------------------

kernelVersion=`uname -r`
kernelMinor=`echo $kernelVersion | awk -F. '{ print $2 }'`

if [ "$kernelMinor" == "4" ]; then
   KERNEL_MODULE_EXTENSION=o
elif [ "$kernelMinor" == "6" ]; then
   KERNEL_MODULE_EXTENSION=ko
else
   echo "nirlp: $kernelVersion kernel not supported"
   exit 1
fi

modulePath=/lib/modules/$kernelVersion/kernel/natinst/nirlp
modulePath_local=objects

testKernelDriverLoaded()
{
    /sbin/lsmod | grep -wc "^$1" &> /dev/null
    return $?
}

start() 
{
   if [ ! -f $modulePath/nirlpk.$KERNEL_MODULE_EXTENSION ]; then
      echo "error: $modulePath/nirlpk.$KERNEL_MODULE_EXTENSION not found"
      echo "error: Please compile and install nirlpk.$KERNEL_MODULE_EXTENSION"
      return 1
   fi

   if ! testKernelDriverLoaded nirlpk; then
      /sbin/modprobe nirlpk &> /tmp/nirlpk-load.log 
      if ! status ; then
         cat /tmp/nirlpk-load.log
         echo " "
         echo "error: nirlpk failed to load"
         echo "possible causes: "
         echo "   nirlpk was not versioned for this kernel ($kernelVersion)"
         echo "   modules are not enabled for this kernel (CONFIG_MODULES)"
         echo "   unresolved symbols"
         echo "possible solution: "
         echo "   if you recently installed a new kernel or have rebooted to"
         echo "   a different kernel then you were previously running then"
         echo "   compile and reinstall nirlpk.$KERNEL_MODULE_EXTENSION"
         
         if testKernelDriverLoaded nirlpk; then
            /sbin/modprobe -r nirlpk &> /dev/null
         fi
         return 1
      fi
   fi

   DEVICES=`awk '{print $4}' /proc/nirlpk/nirlpk`

   rm -f /dev/nirlpk*

   for dev in $DEVICES
   do
      major=`echo $dev | awk -F : '{ print $1 }'`
      minor=`echo $dev | awk -F : '{ print $2 }'`
      mknod /dev/nirlpk$minor c $major $minor
      chmod 0666 /dev/nirlpk$minor
   done

   #  success
   return 0
}

start_local() 
{
   if [ ! -f $modulePath_local/nirlpk.$KERNEL_MODULE_EXTENSION ]; then
      echo "error: $modulePath_local/nirlpk.$KERNEL_MODULE_EXTENSION not found"
      echo "error: Please compile and install nirlpk.$KERNEL_MODULE_EXTENSION"
      return 1
   fi

   if ! testKernelDriverLoaded nirlpk; then
      /sbin/insmod $modulePath_local/nirlpk.ko &> /tmp/nirlpk-load.log 
      if ! status ; then
         cat /tmp/nirlpk-load.log
         echo " "
         echo "error: nirlpk failed to load"
         echo "possible causes: "
         echo "   nirlpk was not versioned for this kernel ($kernelVersion)"
         echo "   modules are not enabled for this kernel (CONFIG_MODULES)"
         echo "   unresolved symbols"
         echo "possible solution: "
         echo "   if you recently installed a new kernel or have rebooted to"
         echo "   a different kernel then you were previously running then"
         echo "   compile and reinstall nirlpk.$KERNEL_MODULE_EXTENSION"
         
         if testKernelDriverLoaded nirlpk; then
            /sbin/modprobe -r nirlpk &> /dev/null
         fi
         return 1
      fi
   fi

   DEVICES=`awk '{print $4}' /proc/nirlpk/nirlpk`

   rm -f /dev/nirlpk*

   for dev in $DEVICES
   do
      major=`echo $dev | awk -F : '{ print $1 }'`
      minor=`echo $dev | awk -F : '{ print $2 }'`
      mknod /dev/nirlpk$minor c $major $minor
      chmod 0666 /dev/nirlpk$minor
   done

   #  success
   return 0
}

stop() 
{
   if testKernelDriverLoaded nirlpk; then
      if ! /sbin/modprobe -r nirlpk ; then
         echo "Failed to unload nirlpk"
         return 1
      fi
   fi

   rm -f /dev/nirlpk*

   return 0
}

restart() 
{
   stop
   start
}

status() 
{    
    if testKernelDriverLoaded nirlpk; then
        return 0
    else
        return 1
    fi
}

case "$1" in
   start)
      start
      ;;
   start_local)
      start_local
      ;;
   stop)
      stop
      ;;
   restart)
      restart
      ;;
   reload)
      restart
      ;;
   force-reload)
      restart
      ;;
   status)
      status
      ;;
   condrestart)
      restart
      ;;
   *)
      echo $"Usage: $0 {start|start_local|stop|restart|reload|force-reload|status|condrestart}"
      exit 2
      ;;
esac

exit $?

